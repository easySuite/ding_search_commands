<?php
/**
 * @file
 * Search terms hooks definitions.
 */

/**
 * Implements hook_theme().
 */
function ting_search_terms_theme($existing, $type, $theme, $path) {
  return array(
    'search_terms_fieldset' => array(
      'variables' => array(),
      'template' => 'search-terms-fieldset',
      'path' => $path . '/templates',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ting_search_terms_form_search_block_form_alter(&$form, &$form_state) {
  $path = drupal_get_path('module', 'ting_search_terms');
  $form['search-terms'] = array(
    '#type' => 'fieldset',
    '#title' => t('Search terms'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#weight' => '102',
    '#tree' => TRUE,
    '#attributes' => array('id' => array('ting-search-terms-fieldset')),
    '#attached' => array(
      'js' => array(
        array(
          'data' => $path . '/js/ting_search_terms.js',
          'scope' => 'footer',
        ),
        array(
          'data' => array(
            'searchTerms' => _ting_search_terms_get_terms(),
          ),
          'type' => 'setting',
        ),
        array(
          /*
           * Default jQuery ui doesn't support autocomplete widget,
           * jQuery ui 1.11 is inserted.
           */
          'data' => $path . '/js/jquery-ui.min.js',
        ),
      ),
      'css' => array(
        $path . '/css/ting_search_terms.css',
      ),
    ),
  );
  $nid = variable_get('ting_search_terms_page', FALSE);
  $form['search-terms']['list'] = array(
    '#markup' => theme('search_terms_fieldset', array('nid' => $nid)),
  );
}

/**
 * Implements hook_preprocess_HOOK().
 */
function ting_search_terms_preprocess_search_terms_fieldset(&$variables) {
  $variables['ops'] = array('AND', 'OR', 'NOT', 'ANY', 'ALL');

  $nid = $variables['nid'];
  if ($nid) {
    $variables['more_link'] = l(t('See more info about search terms'), '/node/' . $nid);
  }
}

/**
 * Get all search terms from the opensearch service.
 *
 * @return array
 *   Term keys with their description.
 */
function _ting_search_terms_get_terms() {
  $cid = 'ting_search_terms';
  $options = array();

  if ($cache = cache_get($cid)) {
    $options = $cache->data;
  }
  else {
    $service_url = variable_get('ting_search_url', '');
    $service_url .= 'opensearch_cql.xml';

    // Fetching status of opensearch CQL indexes.
    $status = drupal_http_request($service_url);

    if ($status->code != '200') {
      // Hardcoding fallback opensearch cql indexes url to v4.0.1.
      $service_url = 'http://opensearch.addi.dk/4.0.1/opensearch_cql.xml';
    }

    $data = file_get_contents($service_url);
    if ($data) {
      $xml = new \SimpleXMLElement($data);

      foreach ($xml->indexInfo->index as $index) {
        $set = (string) $index->map->name['set'];
        if ($set == 'term') {
          $titles = $index->title;
          $description = '';
          foreach ($titles as $title) {
            $lang = (string) $title['lang'];
            if ($lang == 'en') {
              $description = (string) $title;
            }
          }

          $name = (string) $index->map->name;
          $key = $set . '.' . $name;

          // The key 'value' is mandatory for the jquery ui autocomplete library.
          $options[] = array('value' => $key, 'description' => $description);
        }
      }
    }
    cache_set($cid, $options);
  }

  return $options;
}
